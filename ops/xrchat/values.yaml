# Default values for xrengine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

domain: xrengine.local

client:
  enabled: true
  name: xrengine-client

  replicaCount: 1
  image:
    repository: xrengine/client
    tag: latest
    pullPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: xrengine.local
        paths: ["/"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}
  
  extraEnv:
    API_SERVER: http://xrengine.local
    SITE_TITLE: MyXR
    SITE_DESC: Connected Worlds for Everyone
    NODE_ENV: production


server:
  enabled: true
  name: xrengine

  replicaCount: 1
  image:
    repository: xrengine/server
    tag: latest
    pullPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3030

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.xrengine.local
        paths: ["/"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}
  
  # Extra Environment variables to configure xrengine
  extraEnv:
    # ENV_VAR1: val1
    # ENV_VAR2: val2
    
    APP_HOST: http://api.xrengine.local/

    # automatically filled by chart.. ignore
    # MYSQL_PORT: 3306
    # MYSQL_DATABASE: xrengine
    # MYSQL_USER: server
    # MYSQL_PASSWORD: password

    SMTP_HOST: ""
    SMTP_PORT: ""
    SMTP_USER: ""
    SMTP_PASS: ""
    MAIL_FROM: ""

    GITHUB_CLIENT_ID: ""
    GITHUB_CLIENT_SECRET: ""
    GITHUB_CALLBACK_URL: http://localhost:3000/oauth/github

    FACEBOOK_CLIENT_ID: ""
    FACEBOOK_CLIENT_SECRET: ""
    FACEBOOK_CALLBACK_URL: http://localhost:3000/oauth/facebook

    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_CALLBACK_URL: http://localhost:3000/oauth/google


    STORAGE_PROVIDER: local
    STORAGE_S3_BUCKET_NAME: ""
    STORAGE_S3_PUBLIC_VIDEO_PATH: "/"
    STORAGE_S3_PUBLIC_VIDEO_BUCKET: ""
    STORAGE_S3_REGION: ""
    STORAGE_S3_CLOUDFRONT_DOMAIN: ""
    STORAGE_AWS_ACCESS_KEY_ID: ""
    STORAGE_AWS_ACCESS_KEY_SECRET: ""

    AWS_SMS_REGION: ""
    AWS_SMS_ACCESS_KEY_ID: ""
    AWS_SMS_SECRET_ACCESS_KEY: ""
    AWS_SMS_TOPIC_ARN: ""


spoke:
  enabled: true
  name: xrengine-spoke

  replicaCount: 1
  image:
    repository: xrengine/spoke
    tag: latest
    pullPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: local-spoke.xrengine.local
        paths: ["/"]
    # tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  extraEnv: {}

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}
  

gsg:
  enabled: false
  name: gs-go

  replicaCount: 1
  image:
    repository: xrengine/gameserver-go
    tag: latest
    pullPolicy: Always
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}


gs:
  enabled: false
  name: gs

  replicaCount: 1
  image:
    repository: xrengine/gameserver
    tag: latest
    pullPolicy: Always
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}



########### Subcharts - values here will overwrite the subchart

mariadb:
  enabled: true
  nameOverride: xrengine-mariadb
  db:
    name: xrengine
    user: server
    password: password
    existingSecret: 
  replication:
    enabled: false
  externalHost: ""  # use to override - must set mariadb.enabled to false

agones:
  enabled: false
